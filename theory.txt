1.	Что подразумевается под тестовой средой?
Тестовая среда [Test Env] ¬¬– это окружение, созданное для работы команды QA. 
Здесь выполняются регрессионные тесты, с использованием тестовых данных. Обычно тут тестируется то, что готовится на продакшен [prod].

2.	В чем отличие build от release?
Build - это сборка исходного кода, до момента передачи на тестирование
Release -стабилизированный билд, который готов к передаче заказчику. 
Тестирование является основным отличаем между сборкой и выпуском. Сборка все еще находится в фазе тестирования, но релиз больше не требует тестирования.

3.	Основные фазы тестирования.
Pre-Alpha: прототип программы, необходим для представления о будущих возможностях по.
Alpha: это первая фаза тестирования ПО. На этом этапе программистами пишутся тесты на основе белого ящика [unit-test],
 затем тестировщики приступают к тестированию на основе черного и серого ящика. Основная суть данной фазы заключается в том, что продукт тестируют внутри организации.
Beta: следующая стадия, на которой практически готовый продукт тестируется группой людей, которые не работают в компании.
Release candidate: программа успешно прошла все комплексное тестирование, исправлены критические ошибки,
 но все равно не исключена возможность наличия некоторых ошибок.
Release: финальная версия программы, готовая для передачи конечным пользователям.

4.	Что такое импакт анализ?
Импакт анализ - это исследование, при котором обозначаются места в проекте, 
затронутые внесенными изменениями (исправление ошибок, внедрение новой или изменение старой функциональности и т.д.).
Такие места требуют отдельного внимания при проведении регрессионного тестирования. 
Импакт анализ может послужить тестировщику для увеличения тестового покрытия, уменьшения временных затрат на проведение регрессии частей проекта,
которые не были затронуты изменениями и повлиять на повышение качества разрабатываемого ПО. 


5.	Критерии выбора тестов.
Требования к идеальному критерию формулируются следующим образом:
1. достаточность, т. е. критерий должен показывать, когда некоторое конечное множество тестов достаточно для тестирования данной программы;
2. полнота, т. е. в случае ошибки должен существовать тест из множества тестов, удовлетворяющих критерию, который раскрывает ошибку;
3. надежность, т. е. любые два множества тестов, удовлетворяющих ему, одновременно должны раскрывать или не раскрывать ошибки программы;
4. проверяемость, т. е. критерий должен быть легко проверяемым, например, вычисляемым на тестах.
Для нетривиальных классов программ в общем случае не существует полного и надежного критерия, зависящего от программ или спецификаций. 
Поэтому стремятся к идеальному общему критерию через реальные частные.

6.	Принципы тестирования.
1)	Тестирование показывает наличие дефектов по, но не доказывает их отсутствия;
2)	Принцип скопления багов – большее количество дефектов, в меньшем количестве функциональности;
3)	Заблуждение об отсутствии багов – даже если вы протестировали продукт и не нашли багов, это не значит, что продукт будет удобен для использования конечным пользователя. 
	Иначе говоря, верификация != валидаци;
4)	Исчерпывающее тестирование невозможно;
5)	Ранее тестирование = уменьшение временных и денежных затрат в дальнейшем. С каждой стадией SDLC стоимость исправления ошибки возрастает;
6)	Парадокс пестицида – если всегда искать дефекты по одним и тем же тест-кейсам, 
	в скором времени данные тест-кейсы утратят свою актуальность и способность показывать наличие дефектов;
7)	Тестирование зависит от контекста - Тестирование выполняется по-разному, в зависимости от контекста. 
	Тестирование сайта доставки и тестирование медицинского по будет осуществляться по-разному;

7.	Что такое независимое тестирование?
Независимое тестирование (аутсорсинг тестирования) - это тестирование силами дополнительно привлечённой компании или группы людей, 
не участвующих непосредственно в разработке программного обеспечения. Данный подход имеет ряд положительных особенностей,
позволяющих существенно повысить качество создаваемого программного продукта. Из самой идеи независимого тестирования следует, 
что работа выполняется группой людей, которые не находятся в прямом подчинении руководителя разработки программного проекта.
Аутсорсинг тестирования позволяет переложить на Исполнителя все заботы, связанные с:
Наличием ресурсов для тестирования;
Квалификацией и опытом;
Знанием специфики;
Компетенцией;
Проблемами с персоналом;
Адаптацией к меняющимся требованиям;
Снижением времени вывода продукта на рынок.

8.	Что такое тестирование со сдвигом влево?
Тестирование со сдвигом влево – подход к тестировнию, при котором тестирование по начинается еще на ранних этапах SDLS.
Ключевые преимущества:
Сокращение затрат 
Более высокое качество
Повышение эффективности 
Конкурентные преимущества

9.	Почему тестирование делится на отдельные этапы?
•	Каждый этап испытаний имеет свое назначение 
•	Проще управлять поэтапно 
•	Мы можем запустить разные тесты в разных средах 
•	Производительность и качество тестирования улучшаются с помощью поэтапного тестирования

10.	Какие есть этапы тестирования?
 Всего принято выделять 7 этапов тестирования:
1.	Работа с требованиями. Знакомство с требованиями заказчика, что должен из себя представлять итоговый продукт, обсуждение.
2.	Разработка стратегии тестирования. Оценка сроков тестирования, выявление среды тестирования, объединение всей информации, полученной при работе с требованиями.
3.	Создание тестовой документации. Написание сценариев, которые позволят проверить функционал.
4.	Тестирование прототипа. Тестирование основного функционала продукта, корректировка целей, добавление фичей.
5.	Основное тестирование. Выполнение общей проверки продукта.
6.	Стабилизация. На данном этапе происходит работа над устранением багов.
7.	Эксплуатация. Проводится регресс-тестирование, устранение ошибок, которые нашел конечный пользователь.
Прежде, чем переходить к описанию каждого цикла тестирования, необходимо запомнить важное правило: переход к следующему этапу допустим лишь после полного завершения работы на предыдущем.

11.	Как тестировать продукт, требования к которому еще не зафиксированы?
Если спецификация требований недоступна для продукта, тогда план тестирования может быть создан на основе предположений, сделанных относительно продукта. Но мы должны хорошо документировать все предположения в плане тестирования.

12.	Как вы узнаете, было ли создано достаточно тестов для тестирования продукта?
Прежде всего, мы проверим, охватывает ли каждое требование хотя бы один Test case. 
Если да, то можно сказать, что тестовых примеров достаточно для тестирования продукта

13.	Что подразумевается под тестовыми данными?
Тестовые данные - это набор входных значений, необходимых для выполнения Test case. 
Тестировщики определяют данные в соответствии с требованиями. Они могут сделать это вручную или использовать инструменты генерации.

14.	Что такое бета-тестирование?
Тестирование почти готового программного обеспечения на стороне конечного пользователя 
(в пользовательской среде, в реальном времени, реальными пользователями),
путем привлечения добровольцев для тестирования и дачи обратной связи о найденных дефектов.

15.	Что означает пилотное тестирование?
Пилотное тестирование проводится группой пользователей до полного развертывания системы(в среде разработки),
 чтобы дать отзыв о ее эффективности. Проводится перед бета-тестированием.

16.	Что такое бизнес-логика?
Бизнес-логика – то, что должна делать программа согласно требованиям заказчика.

17.	Какие существуют основные виды тестирования ПО
Тестирование ПО делится на три основных вида:
Функциональное
К функциональному тестированию относят тестирование:
– безопасности (не всегда) 
– функциональное
Нефункциональное
К нефункциональному тестированию относят:
– тестирование производительности
– тестирование графического интерфейса
– тестирование на отказ и восстановление
– тестирование локализации
– тестирование глобализации
– тестирование удобства пользования
– тестирование безопасности (не всегда)
– инсталяционное тестирование
Связанное с изменениями
– Регрессионное тестирование
– Ретест
– Тестирование сборки
– Смоук

18.	Методы тестирования
–Метод белого ящика (Проверка ПО с доступом к коду приложения (Unit-tests))
– Метод серого ящика (Совокупность белого и черного ящика (есть доступ к базам данных, API приложения)
– Метод черного ящика (Проверка ПО без знания или доступа к коду приложения).

19.	Что такое негативное тестирование?
Проверка ПО с применением сценариев, которые не ожидаются от пользователя программой.
К этому относятся введение невалидных данных, с целью проверки, как отреагирует наше ПО.

20.	Что такое позитивное тестирование?
Позитивное тестирование проводится с применением сценариев, которые соответствуют заявленным требованиям.

21.	Что такое модульное тестирование? 
Модульное тестирование проверяет корректно ли работают отдельные модули программного обеспечения.
Модульное тестирование в основном проводится программистами посредством unit-тестов.

22.	Что такое интеграционное тестирование?
Интеграционное тестирование это процесс проверки интерфейса между несколькими модулями системы.

23.	Разница между юнит-тестированием и интеграционным тестированием?
Модульное тестирование проверяет каждый модуль по-отдельности, интеграционное – сразу несколько модулей, в частности связи между ними.
Интеграционное тестирование проводится после модульного тестирования
Юнит-тестирование – тестирование белого ящика, интеграционное – тестирование черного ящика
Юнит-тесты дешевле в исполнении чем интеграционные.
